[include macros_2.cfg]
; Custom macro file - https://raw.githubusercontent.com/Rushmere3D/Voron-0.2/main/Config/macros.cfg

## Client variable macro for your printer.cfg from mainsail.cfg file
[gcode_macro _CLIENT_VARIABLE]
#variable_use_custom_pos   : False ; use custom park coordinates for x,y [True/False]
#variable_custom_park_x    : 0.0   ; custom x position; value must be within your defined min and max of X
#variable_custom_park_y    : 0.0   ; custom y position; value must be within your defined min and max of Y
#variable_custom_park_dz   : 2.0   ; custom dz value; the value in mm to lift the nozzle when move to park position
variable_retract          : 1.0   ; the value to retract while PAUSE
variable_cancel_retract   : 1.0   ; the value to retract while CANCEL_PRINT
#variable_speed_retract    : 35.0  ; retract speed in mm/s
#variable_unretract        : 1.0   ; the value to unretract while RESUME
#variable_speed_unretract  : 35.0  ; unretract speed in mm/s
#variable_speed_hop        : 15.0  ; z move speed in mm/s
#variable_speed_move       : 100.0 ; move speed in mm/s
#variable_park_at_cancel   : False ; allow to move the toolhead to park while execute CANCEL_PRINT [True/False]
#variable_park_at_cancel_x : None  ; different park position during CANCEL_PRINT [None/Position as Float]; park_at_cancel must be True
#variable_park_at_cancel_y : None  ; different park position during CANCEL_PRINT [None/Position as Float]; park_at_cancel must be True
## !!! Caution [firmware_retraction] must be defined in the printer.cfg if you set use_fw_retract: True !!!
variable_use_fw_retract   : True ; use fw_retraction instead of the manual version [True/False]
#variable_idle_timeout     : 0     ; time in sec until idle_timeout kicks in. Value 0 means that no value will be set or restored
gcode:
  # Left Intentionally Blank

[gcode_macro _CG28]
gcode:
    {% if "xyz" not in printer.toolhead.homed_axes %}
        G28
    {% endif %}

[pause_resume]


[gcode_macro START_PRINT]
#from https://github.com/rootiest/zippy_guides/blob/main/guides/macros.md#aliases
#helps when these are flipped
gcode:
    PRINT_START {rawparams}

[gcode_macro END_PRINT]
gcode:
    PRINT_END {rawparams}

#####################################################################
#   print_start macro
#####################################################################

[gcode_macro PRINT_START]
gcode:
  # This part fetches data from your slicer. Such as bed temp, extruder temp, chamber temp and size of your printer.
  {% set target_bed = params.BED|int %}
  {% set target_extruder = params.EXTRUDER|int %}
  {% set target_chamber = params.CHAMBER|default("25")|int %}
  {% set x_wait = printer.toolhead.axis_maximum.x|float / 2 %}
  {% set y_wait = printer.toolhead.axis_maximum.y|float / 2 %}

  EXCLUDE_OBJECT_DEFINE

  # Homes the printer and sets absolute positioning
  SET_LED LED=displayStatus RED=1 GREEN=0 BLUE=0
# SET_PIN PIN=caselight_Left VALUE=0.1
# SET_PIN PIN=caselight_Right VALUE=0.1
# SET_PIN PIN=tool_light VALUE=0.1
  #STATUS_HOMING
  _CG28                  # Full home (XYZ)
  G90                   # Absolute position

  # Checks if the bed temp is higher than 90c - if so then trigger a heatsoak
  {% if params.BED|int > 90 %}
    SET_DISPLAY_TEXT MSG="Bed: {target_bed}c"           # Displays info
    #STATUS_HEATING
    M106 S255                                         # Turns on the PT-fan


    G1 X{x_wait} Y{y_wait} Z15 F2000                  # Goes to center of the bed
    M190 S{target_bed}                                # Sets target temp for the bed
    SET_DISPLAY_TEXT MSG="Heatsoak: {target_chamber}c"  # Displays info
    TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={target_chamber}   # Waits for chamber to reach desired temp

  # If the bed temp is not over 90c then it skips the heatsoak and just heats up to set temp with a 2min soak.
  {% else %}
    SET_DISPLAY_TEXT MSG="Bed: {target_bed}c"           # Displays info
    #STATUS_HEATING                                      # Sets SB-leds to heating-mode
    G1 X{x_wait} Y{y_wait} Z15 F2000                # Goes to center of the bed
    M190 S{target_bed}                              # Sets target temp for the bed
    #####G4 P120000                                      # Waits 2 min for the bedtemp to stabilize
  {% endif %}
  
  Nevermore_On
  ;SET_FAN_SPEED FAN=Nevermore SPEED=0.75

  Smart_Park
  
  # Heats up the nozzle up to target via slicer
  M107                                              # Turns off the PT-fan
  SET_DISPLAY_TEXT MSG="Hotend: {target_extruder}c"             # Displays info
  M109 S{target_extruder}                           # Heats the nozzle to your print temp
  #CLEAN_NOZZLE

  SET_DISPLAY_TEXT MSG="Printer goes brr"          # Displays info
  ##STATUS_PRINTING                                # Sets SB-leds to printing-mode
  ;G1 X3 Y1.5 Z0.3 F2000                              # Moves to starting point
  ;G1 X115 E20 F1000                                # Purge line
  LINE_PURGE
  G92 E0

[gcode_macro PRINT_END]
gcode:
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-2.0 F3600                 ; retract filament
    G91                            ; relative positioning

    #   Get Boundaries
    {% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}
    {% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}
    {% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}

    #   Check end position to determine safe direction to move
    {% if printer.toolhead.position.x < (max_x - 20) %}
        {% set x_safe = 20.0 %}
    {% else %}
        {% set x_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.y < (max_y - 20) %}
        {% set y_safe = 20.0 %}
    {% else %}
        {% set y_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.z < (max_z - 2) %}
        {% set z_safe = 2.0 %}
    {% else %}
        {% set z_safe = max_z - printer.toolhead.position.z %}
    {% endif %}

    G0 Z{z_safe} F2000             ; move nozzle up
    G0 X{x_safe} Y{y_safe} F20000  ; move nozzle to remove stringing
    TURN_OFF_HEATERS
    M107                           ; turn off fan
    G90                            ; absolute positioning
    G0 X60 Y{max_y - 10} F3600          ; park nozzle at rear

    SET_LED LED=displayStatus RED=0 GREEN=1 BLUE=0
    SET_DISPLAY_TEXT MSG="Print Complete"
    ;Nevermore_Off #Nevermore turned off at idle timeout

[gcode_macro _PRIME_BLOB]
#from 247 printing
gcode:
  M117 Prime Blob
  G92 E0;
  G1 X1 Y5 Z0.30 F12000; #G1 X118 Y4 Z0.20 F12000;
  G1 E6 F120;
  G1 E12 F120;
  G1 E15 Z0.8 F80;
  G1 E17 Z1.2 F60;
  G4 P500;
  G1 X1 Y5 Z1.2 F4000; #G1 X118 Y4 Z1.2 F4000;
  G1 X10 Y5 E18 Z0.30 F4000; #G1 X108 Y4 E18 Z0.20 F4000;
  G4 P200;
  G92 E0; 

[gcode_macro M600]
gcode:
    #LCDRGB R=0 G=1 B=0  ; Turn LCD green
    PAUSE                ; Pause


[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
gcode:
    # Parameters
    {% set z = params.Z|default(10)|int %}                                                   ; z hop amount
    
    {% if printer['pause_resume'].is_paused|int == 0 %}     
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE={z}                              ; set z hop variable for reference in resume macro
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=etemp VALUE={printer['extruder'].target}    ; set hotend temp variable for reference in resume macro
                                
        ;SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0                                  ; disable filament sensor       
        SAVE_GCODE_STATE NAME=PAUSE                                                          ; save current print position for resume                
        BASE_PAUSE                                                                           ; pause print
        {% if (printer.gcode_move.position.z + z) < printer.toolhead.axis_maximum.z %}       ; check that zhop doesn't exceed z max
            G91                                                                              ; relative positioning
            G1 Z{z} F900                                                                     ; raise Z up by z hop amount
        {% else %}
            { action_respond_info("Pause zhop exceeds maximum Z height.") }                  ; if z max is exceeded, show message and set zhop value for resume to 0
            SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE=0
        {% endif %}
        G90                                                                                  ; absolute positioning
        G1 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+5} F6000   ; park toolhead at front center
        SAVE_GCODE_STATE NAME=PAUSEPARK                                                      ; save parked position in case toolhead is moved during the pause (otherwise the return zhop can error) 
        M104 S0                                                                              ; turn off hotend
        SET_IDLE_TIMEOUT TIMEOUT=43200                                                       ; set timeout to 12 hours
    {% endif %}


[gcode_macro RESUME]
rename_existing: BASE_RESUME
variable_zhop: 0
variable_etemp: 0
gcode:
    # Parameters
    {% set e = params.E|default(2.5)|int %}                                          ; hotend prime amount (in mm)
    
    {% if printer['pause_resume'].is_paused|int == 1 %}
        ;SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=1                          ; enable filament sensor
        #RESETRGB                                                                    ; reset LCD color
        SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}  ; set timeout back to configured value
        {% if etemp > 0 %}
            M109 S{etemp|int}                                                        ; wait for hotend to heat back up
        {% endif %}
        RESTORE_GCODE_STATE NAME=PAUSEPARK MOVE=1 MOVE_SPEED=100                     ; go back to parked position in case toolhead was moved during pause (otherwise the return zhop can error)  
        G91                                                                          ; relative positioning
        M83                                                                          ; relative extruder positioning
        {% if printer[printer.toolhead.extruder].temperature >= printer.configfile.settings.extruder.min_extrude_temp %}                                                
            G1 Z{zhop * -1} E{e} F900                                                ; prime nozzle by E, lower Z back down
        {% else %}                      
            G1 Z{zhop * -1} F900                                                     ; lower Z back down without priming (just in case we are testing the macro with cold hotend)
        {% endif %}                             
        RESTORE_GCODE_STATE NAME=PAUSE MOVE=1 MOVE_SPEED=60                          ; restore position
        BASE_RESUME                                                                  ; resume print
    {% endif %}


[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout} ; set timeout back to configured value
    CLEAR_PAUSE
    SDCARD_RESET_FILE
    PRINT_END
    BASE_CANCEL_PRINT

[gcode_macro OFF]
gcode:
    M84                                  ; turn steppers off
    TURN_OFF_HEATERS                     ; turn bed / hotend off
    M107                                 ; turn print cooling fan off
    #SET_FAN_SPEED FAN=Exhaust SPEED=0   ; turn exhaust fan off
    #SET_FAN_SPEED FAN=BedFans SPEED=0   ; bed fan off
    #SET_PIN PIN=caselight VALUE=0       ; turn case light off

#--------------------------------------------------------------------
# Movement macros, including PARKING MACROS from https://ellis3dp.com/Print-Tuning-Guide/articles/useful_macros/parking.html
[gcode_macro UNSAFE_LOWER_BED]
description: Lower the bed 10mm without homing
gcode:
  G90
  SET_KINEMATIC_POSITION Z=0
  G0 Z10 F600
  M84

[gcode_macro UNSAFE_RAISE_BED]
# https://klipper.discourse.group/t/moving-z-before-homing-or-other/1037/7
description: Raise the bed 10mm without homing
gcode:
  G90
  SET_KINEMATIC_POSITION Z=10
  G0 Z0 F600
  M84

[gcode_macro PARKCENTER]
gcode:
    _CG28                              ; home if not already homed
    SAVE_GCODE_STATE NAME=PARKCENTER
    G90                               ; absolute positioning
    G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_maximum.y/2} Z{printer.toolhead.axis_maximum.z/2} F2000    #F6000
    RESTORE_GCODE_STATE NAME=PARKCENTER

# Park front center
[gcode_macro PARKFRONT]
gcode:
    _CG28                             ; home if not already homed
    SAVE_GCODE_STATE NAME=PARKFRONT
    G90                               ; absolute positioning
    G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+5} Z{printer.toolhead.axis_maximum.z/2} F6000        
    RESTORE_GCODE_STATE NAME=PARKFRONT

# Park 15mm above center of bed
[gcode_macro PARKBED]
gcode:
    _CG28                              ; home if not already homed
    SAVE_GCODE_STATE NAME=PARKBED
    G90                                ; absolute positioning
    G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_maximum.y/2} Z15 F6000                                     
    RESTORE_GCODE_STATE NAME=PARKBED

#--------------------------------------------------------------------
[gcode_macro FILAMENT_LOAD]
gcode:
   M83                            ; set extruder to relative
   #G1 E250 F1800                  ; quickly load filament to down bowden
   G1 E30 F300                    ; slower extrusion for hotend path. Original value: E20 F300
   G1 E50 F150                    ; prime nozzle with filament. Original value: E15 F150
   M82                            ; set extruder to absolute


[gcode_macro FILAMENT_UNLOAD]
gcode:
   M83                            ; set extruder to relative
   G1 E10 F300                    ; extrude a little to soften tip
   G1 E-120 F1800                 ; retract filament completely
   M82                            ; set extruder to absolute


[gcode_macro Case_Lights]
variable_lights_on: 1
gcode:
  SET_PIN PIN=caselights VALUE={printer["gcode_macro Case_Lights"].lights_on}
  {% if printer["gcode_macro Case_Lights"].lights_on == 1 %}
  SET_GCODE_VARIABLE MACRO=Case_Lights VARIABLE=lights_on VALUE=0
  {% else %}
  SET_GCODE_VARIABLE MACRO=Case_Lights VARIABLE=lights_on VALUE=1
  {% endif %}

[gcode_macro Nevermore]
variable_nevermore_on: 0.75
gcode:
  SET_FAN_SPEED FAN=Nevermore SPEED={printer["gcode_macro Nevermore"].nevermore_on}
  ;SET_PIN PIN=nevermore VALUE={printer["gcode_macro Nevermore"].nevermore_on}
  {% if printer["gcode_macro Nevermore"].nevermore_on == 0.75 %}
  SET_GCODE_VARIABLE MACRO=Nevermore VARIABLE=nevermore_on VALUE=0
  {% else %}
  SET_GCODE_VARIABLE MACRO=Nevermore VARIABLE=nevermore_on VALUE=0.75
  {% endif %}

[gcode_macro Nevermore_On]
gcode:
  SET_FAN_SPEED FAN=Nevermore SPEED=0.75

[gcode_macro Nevermore_Off]
gcode:
  SET_FAN_SPEED FAN=Nevermore SPEED=0